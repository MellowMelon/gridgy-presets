{
  "name": "gridgy-presets",
  "version": "1.0.0",
  "description": "Premade gridgy classes for common grid styles",
  "author": {
    "name": "Palmer Mebane"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "http://github.com/MellowMelon/gridgy-presets.git"
  },
  "keywords": [
    "geometry",
    "grid",
    "hittest",
    "tesselation",
    "preset"
  ],
  "main": "lib/main.js",
  "module": "libes/main.js",
  "files": [
    "dist",
    "lib",
    "libes"
  ],
  "dependencies": {
    "gridgy": "^1.0.0"
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-eslint": "^8.1.2",
    "babel-plugin-external-helpers": "^6.22.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "babel-preset-flow": "^6.23.0",
    "babel-register": "^6.26.0",
    "chai": "^4.1.2",
    "eslint": "^4.14.0",
    "flow-bin": "^0.62.0",
    "flow-copy-source": "^1.3.0",
    "gh-pages": "^1.1.0",
    "gzip-size-cli": "^2.1.0",
    "mocha": "^4.1.0",
    "mocha-testcheck": "^1.0.0-rc.0",
    "npm-run-all": "^4.1.2",
    "prettier": "1.9.2",
    "rollup": "^0.53.0",
    "rollup-plugin-babel": "^3.0.3",
    "rollup-plugin-commonjs": "^8.2.6",
    "rollup-plugin-node-resolve": "^3.0.0",
    "rollup-plugin-uglify": "^2.0.1"
  },
  "scripts": {
    "prepublishOnly": "npm run build",
    "build": "npm run build-dir && npm run build-dir-es && npm run build-flow && npm run build-bundle",
    "build-dir": "babel src --out-dir lib",
    "build-dir-es": "BABEL_ENV=es babel src --out-dir libes",
    "build-flow": "flow-copy-source src libes",
    "build-bundle": "rollup -c",
    "postbuild-bundle": "gzip-size dist/main.umd.min.js",
    "build-demo": "rollup -c --environment DEMO",
    "deploy-demo": "npm run build-demo && gh-pages -d demo",
    "pretty": "prettier --config .prettierrc \"{src,test,demo}/**/*.js\" --write",
    "test": "mocha test/*.js --require babel-register",
    "testw": "mocha test/*.js --require babel-register --watch --reporter min",
    "test-min": "mocha test/*.js --require babel-register --reporter dot",
    "lint": "eslint --cache \"src/**/*.js\" \"test/**/*.js\"",
    "flow": "flow",
    "check": "npm run pretty && run-p -s lint flow test-min"
  }
}
